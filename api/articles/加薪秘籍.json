{"title":"加薪秘籍","uid":"2debb017808112f7c6dc95c7509d53b7","slug":"加薪秘籍","date":"2021-07-01T06:58:40.000Z","updated":"2021-11-30T08:59:44.258Z","comments":true,"path":"api/articles/加薪秘籍.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":[],"content":"<p><b>题目：从 innodb 的索引结构分析，为什么索引的 key 长度不能太长？</b><br>key 太长会导致一个页当中能够存放的 key 的数目变少，间接导致索引树的页数目变多，索引层次增加，从而影响整体查询变更的效率。</p>\n<p>题目：请解释下为什么鹿晗发布恋情的时候，微博系统会崩溃，如何解决？<br>A. 获取微博通过 pull 方式还是 push 方式</p>\n<p>B. 发布微博的频率要远小于阅读微博</p>\n<p>C. 流量明星的发微博，和普通博主要区分对待，比如在 sharding的时候，也要考虑这个因素</p>\n<p>题目：引用与指针有什么区别？<br>引用与指针区别：引用只是取得数据,无权修改,句柄就是一种引用的方式；指针是直接指向内存的,可以修改数据的。<br>　　引用访问一个变量是直接访问，而指针是间接访问。<br>　　引用是一个变量的别名，本身不单独分配自己的内存空间，而指针有自己的内存空间。<br>　　引用在开始的时候就绑定到了一个内存空间(开始必须赋初值),所以他只能是这个内存空间的名字,而不能改成其他的,当然可以改变这个内存空间的值.</p>\n<p><b>题目：mysql为什么要用b+树，不用平衡二叉树做索引结构</b><br>平衡二叉树</p>\n<p>1.非叶子节点最多拥有两个子节点。</p>\n<p>2.非叶子节值大于左边子节点、小于右边子节点。</p>\n<p>3.树的左右两边的层级数相差不会大于1。</p>\n<p>4.没有值相等重复的节点。<br><img src=\"/post/twoXTree.png\" alt=\"pinghenTwoXTree\"></p>\n<p>大规模数据存储的时候，平衡二叉树往往出现由于树的深度过大而造成磁盘IO读写过于频繁<br>B+树只有叶节点存放数据，其余节点用来索引,索引也会被存储在磁盘上,层数很少,B+树天然具备排序功能,查询速度更稳定</p>\n<span id=\"more\"></span>\n\n<p><b>题目：多线程的优缺点</b><br>(1)多线程技术使程序的响应速度更快 ,因为用户界面可以在进行其它工作的同时一直处于活动状态;</p>\n<p>(2)当前没有进行处理的任务时可以将处理器时间让给其它任务;</p>\n<p>(3)占用大量处理时间的任务可以定期将处理器时间让给其它任务;</p>\n<p>(4)可以随时停止任务;</p>\n<p>(5)可以分别设置各个任务的优先级以优化性能。<br>是否需要创建多个线程取决于各种因素。在以下情况下,最适合采用多线程处理:<br>(1)耗时或大量占用处理器的任务阻塞用户界面操作;</p>\n<p>(2)各个任务必须等待外部资源 (如远程文件或 Internet连接)。</p>\n<p>缺点：<br>(1)等候使用共享资源时造成程序的运行速度变慢。这些共享资源主要是独占性的资源 ,如打印机等。</p>\n<p>(2)对线程进行管理要求额外的 CPU开销。线程的使用会给系统带来上下文切换的额外负担。当这种负担超过一定程度时,多线程的特点主要表现在其缺点上,比如用独立的线程来更新数组内每个元素。</p>\n<p>(3)线程的死锁。即较长时间的等待或资源竞争以及死锁等多线程症状。</p>\n<p>(4)对公有变量的同时读或写。当多个线程需要对公有变量进行写操作时,后一个线程往往会修改掉前一个线程存放的数据,从而使前一个线程的参数被修改;另外 ,当公用变量的读写操作是非原子性时,在不同的机器上,中断时间的不确定性,会导致数据在一个线程内的操作产生错误,从而产生莫名其妙的错误,而这种错误是程序员无法预知的。</p>\n<p><b>题目：数据库范式</b><br>1.数据库表的每一列都是不可分割的基本数据项，同一列中不能有多个值<br>2.要求数据库表中的每个实例或行必须可以被惟一地区分（主键）<br>3.要求一个数据库表中不包含已在其它表中已包含的非主关键字信息（不要有重复一样属性的在别的表中）</p>\n<p><b>题目：堆栈溢出一般是由什么原因导致的？</b><br>1.函数调用层次太深。函数递归调用时，系统要在栈中不断保存函数调用时的现场和产生的变量，如果递归调用太深，就会造成栈溢出，这时递归无法返回。再有，当函数调用层次过深时也可能导致栈无法容纳这些调用的返回地址而造成栈溢出。<br>2.动态申请空间使用之后没有释放。由于C语言中没有垃圾资源自动回收机制，因此，需要程序主动释放已经不再使用的动态地址空间。申请的动态空间使用的是堆空间，动态空间使用不会造成堆溢出。<br>3.数组访问越界。C语言没有提供数组下标越界检查，如果在程序中出现数组下标访问超出数组范围，在运行过程中可能会内存访问错误。<br>4.指针非法访问。指针保存了一个非法的地址，通过这样的指针访问所指向的地址时会产生内存访问错误。</p>\n<p><b>题目：</b></p>\n","text":"题目：从 innodb 的索引结构分析，为什么索引的 key 长度不能太长？key 太长会导致一个页当中能够存放的 key 的数目变少，间接导致索引树的页数目变多，索引层次增加，从而影响整体查询变更的效率。 题目：请解释下为什么鹿晗发布恋情的时候，微博系统会崩溃，如何解决？A. ...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"面试","slug":"面试","count":1,"path":"api/tags/面试.json"}],"toc":"","author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"node.js中常用的函数","uid":"c776e2dac8f01316cfe1fc728bbcc754","slug":"node-js中常用的函数","date":"2021-07-07T06:33:31.000Z","updated":"2021-11-30T09:05:10.586Z","comments":true,"path":"api/articles/node-js中常用的函数.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"http部分 import fetch from &quot;node-fetch&quot;; import &#123; RequestInit &#125; from &quot;node-fetch&quot;; import &#123; URLSearchParams...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"node.js","slug":"node-js","count":7,"path":"api/tags/node-js.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"算法","uid":"7b15f460606fcb4d23e6a93344af8c37","slug":"算法","date":"2021-06-23T07:06:23.000Z","updated":"2021-11-30T08:59:49.772Z","comments":true,"path":"api/articles/算法.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"最常用的几种算法1.快速排序快速排序的最坏运行情况是 O(n²)，比如说顺序数列的快排。但它的平摊期望时间是 O(nlogn)，且 O(nlogn) 记号中隐含的常数因子很小，比复杂度稳定等于 O(nlogn) 的归并排序要小很多。所以，对绝大多数顺序性较弱的随机数列而言，快速排...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}