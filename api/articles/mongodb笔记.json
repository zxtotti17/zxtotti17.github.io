{"title":"Mongodb笔记","uid":"03ffe00e2e1072f20d7bd09de5fd3f01","slug":"mongodb笔记","date":"2020-07-28T04:54:03.000Z","updated":"2021-12-09T11:36:06.983Z","comments":true,"path":"api/articles/mongodb笔记.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"content":"<p>下载地址：<a href=\"https://www.mongodb.com/download-center#community\">https://www.mongodb.com/download-center#community</a></p>\n<h1 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h1><p>sudo tar -zxvf mongodb-osx-ssl-x86_64-4.0.9.tgz<br>export PATH=/usr/local/mongodb/bin:$PATH</p>\n<p>1、首先我们创建一个数据库存储目录 /data/db：</p>\n<p>sudo mkdir -p /data/db<br>sudo mongod –dbpath=/data/db<br>#建议换一个路径，然后先启动mongod进程会卡着日志的地方，再开一个窗口启动mongo就可以了</p>\n<p>sudo mount -uw / #增加写权限</p>\n<h1 id=\"使用用户名密码连接\"><a href=\"#使用用户名密码连接\" class=\"headerlink\" title=\"使用用户名密码连接\"></a>使用用户名密码连接</h1><p>mongodb://admin:123456@localhost/</p>\n<h1 id=\"一般的命令\"><a href=\"#一般的命令\" class=\"headerlink\" title=\"一般的命令\"></a>一般的命令</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">show dbs\nuse runoob #如果数据库不存在，则创建数据库，否则切换到指定数据库。</code></pre>\n\n<p>db.dropDatabase() #删除当前db指向的数据库</p>\n<h1 id=\"MongoDB-中使用-createCollection-方法来创建集合\"><a href=\"#MongoDB-中使用-createCollection-方法来创建集合\" class=\"headerlink\" title=\"MongoDB 中使用 createCollection() 方法来创建集合\"></a>MongoDB 中使用 createCollection() 方法来创建集合</h1><p>db.createCollection(name, options) #在 MongoDB 中，你不需要创建集合。当你插入一些文档时，MongoDB 会自动创建集合</p>\n<h1 id=\"增删改查\"><a href=\"#增删改查\" class=\"headerlink\" title=\"增删改查\"></a>增删改查</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">db.test.drop() #删除集合\ndb.col.insert()\ndb.col.update(&#123;&#39;title&#39;:&#39;MongoDB 教程&#39;&#125;,&#123;$set:&#123;&#39;title&#39;:&#39;MongoDB&#39;&#125;&#125;,&#123;multi:true&#125;)#更新多条有同一标签的数据\ndb.col.save()#入的文档来替换已有文档，_id 主键存在就更新，不存在就插入\n\n# 条件\n\n$lt &lt; \n$lte 小于等于\n$gt &gt;\n$gte 大于\n$ne 不等\n\ndb.col.find(&#123;key1:value1, key2:value2&#125;).pretty()   #and\ndb.col.find(   \t#or\n   &#123;\n      $or: [\n         &#123;key1: value1&#125;, &#123;key2:value2&#125;\n      ]\n   &#125;\n).pretty()\ndb.col.find(&#123;&quot;title&quot; : &#123;$type : &#39;string&#39;&#125;&#125;)\ndb.col.find().limit(1) #限制1条数 数组\ndb.col.find().skip(1)  #跳过1条\ndb.col.find().sort(1)  #1升序  -1降序  3者同时的时候优先顺序是  sort  skip  limit\n\ndb.values.createIndex(&#123;open: 1, close: 1&#125;, &#123;background: true&#125;)  #建立索引1正序  -1反序 创建工作在后台执行\n1、查看集合索引\ndb.col.getIndexes()\n2、查看集合索引大小\ndb.col.totalIndexSize()\n3、删除集合所有索引\ndb.col.dropIndexes()\n4、删除集合指定索引\ndb.col.dropIndex(&quot;索引名称&quot;)\n\ndb.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, num_tutorial : &#123;$sum : 1&#125;&#125;&#125;])\n&#x3D; select by_user, count(*) from mycol group by by_user\n\n$sum\t计算总和\n$avg\t计算平均值\n$min\t获取集合中所有文档对应值得最小值</code></pre>\n<span id=\"more\"></span>\n<h1 id=\"mongoDB的主从副本集\"><a href=\"#mongoDB的主从副本集\" class=\"headerlink\" title=\"mongoDB的主从副本集\"></a>mongoDB的主从副本集</h1><p>mongod –port “PORT” –dbpath “YOUR_DB_DATA_PATH” –replSet “REPLICA_SET_INSTANCE_NAME”<br>mongod –port 27017 –dbpath “D:\\set up\\mongodb\\data” –replSet rs0<br>以上实例会启动一个名为rs0的MongoDB实例，其端口号为27017。<br>启动后打开命令提示框并连接上mongoDB服务。<br>在Mongo客户端使用命令rs.initiate()来启动一个新的副本集。<br>我们可以使用rs.conf()来查看副本集的配置<br>查看副本集状态使用 rs.status() 命令<br>添加副本集的成员，我们需要使用多台服务器来启动mongo服务。进入Mongo客户端，并使用rs.add()方法来添加副本集的成员<br>rs.add(“mongod1.net:27017”)<br>db.isMaster()# 判断当前运行的Mongo服务是否为主节点可以使用命令<br>副本集在主机宕机后，副本会接管主节点成为主节点 （渣男的品质）</p>\n<h1 id=\"mongo备份\"><a href=\"#mongo备份\" class=\"headerlink\" title=\"mongo备份\"></a>mongo备份</h1><p>mongodump -h dbhost -d dbname -o dbdirectory   #-d 数据库实例  -o 备份数据存放位置</p>\n<h1 id=\"mongo监控\"><a href=\"#mongo监控\" class=\"headerlink\" title=\"mongo监控\"></a>mongo监控</h1><p>mongostat是mongodb自带的状态检测工具 bin/mongostat   bin/mongotop</p>\n<h1 id=\"mongo覆盖查询\"><a href=\"#mongo覆盖查询\" class=\"headerlink\" title=\"mongo覆盖查询\"></a>mongo覆盖查询</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">db.users.ensureIndex(&#123;gender:1,user_name:1&#125;)\ndb.users.find(&#123;gender:&quot;M&quot;&#125;,&#123;user_name:1,_id:0&#125;)\n#MongoDB的不会去数据库文件中查找。相反，它会从索引中提取数据</code></pre>\n\n<h1 id=\"mongo查询分析\"><a href=\"#mongo查询分析\" class=\"headerlink\" title=\"mongo查询分析\"></a>mongo查询分析</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">db.users.find(&#123;gender:&quot;M&quot;&#125;,&#123;user_name:1,_id:0&#125;).explain()</code></pre>\n<p>indexOnly: 字段为 true ，表示我们使用了索引</p>\n<h1 id=\"mongodb原子操作\"><a href=\"#mongodb原子操作\" class=\"headerlink\" title=\"mongodb原子操作\"></a>mongodb原子操作</h1><p>$set<br>用来指定一个键并更新键值，若键不存在并创建。<br>{ $set : { field : value } }<br>$unset<br>用来删除一个键。<br>{ $unset : { field : 1} }<br>$inc<br>$inc可以对文档的某个值为数字型（只能为满足要求的数字）的键进行增减的操作。<br>{ $inc : { field : value } }<br>$push<br>用法：<br>{ $push : { field : value } }<br>把value追加到field里面去，field一定要是数组类型才行，如果field不存在，会新增一个数组类型加进去<br>$pushAll<br>同$push,只是一次可以追加多个值到一个数组字段内。<br>{ $pushAll : { field : value_array } }<br>$pull<br>从数组field内删除一个等于value值。<br>{ $pull : { field : value } }<br>$addToSet<br>增加一个值到数组内，而且只有当这个值不在数组内才增加。<br>$pop<br>删除数组的第一个或最后一个元素<br>{ $pop : { field : 1 } }<br>$rename<br>修改字段名称<br>{ $rename : { old_field_name : new_field_name } }<br>$bit<br>位操作，integer类型<br>{$bit : { field : {and : 5}}}</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">db.collection.findAndModify()  #查询并更新\ndb.col.findAndModify ( &#123;\n   query: &#123;\n            _id: 123456789,\n            available: &#123; $gt: 0 &#125; \n          &#125;, #查询\n   update: &#123;\n             $inc: &#123; available: -1 &#125;,\n             $push: &#123; checkout: &#123; by: &quot;abc&quot;, date: new Date() &#125; &#125;\n           &#125;  #更新\n&#125; )</code></pre>\n\n\n","text":"下载地址：https://www.mongodb.com/download-center#community 解压sudo tar -zxvf mongodb-osx-ssl-x86_64-4.0.9.tgzexport PATH=/usr/local/mongodb/bin:$...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"mongodb","slug":"mongodb","count":1,"path":"api/tags/mongodb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%8E%8B\"><span class=\"toc-text\">解压</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">使用用户名密码连接</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E8%88%AC%E7%9A%84%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">一般的命令</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MongoDB-%E4%B8%AD%E4%BD%BF%E7%94%A8-createCollection-%E6%96%B9%E6%B3%95%E6%9D%A5%E5%88%9B%E5%BB%BA%E9%9B%86%E5%90%88\"><span class=\"toc-text\">MongoDB 中使用 createCollection() 方法来创建集合</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5\"><span class=\"toc-text\">增删改查</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#mongoDB%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%89%AF%E6%9C%AC%E9%9B%86\"><span class=\"toc-text\">mongoDB的主从副本集</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#mongo%E5%A4%87%E4%BB%BD\"><span class=\"toc-text\">mongo备份</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#mongo%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">mongo监控</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#mongo%E8%A6%86%E7%9B%96%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">mongo覆盖查询</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#mongo%E6%9F%A5%E8%AF%A2%E5%88%86%E6%9E%90\"><span class=\"toc-text\">mongo查询分析</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#mongodb%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">mongodb原子操作</span></a></li></ol>","author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"node.js插件","uid":"772f75bc85a5f28f8e914897060b12ef","slug":"node-js插件","date":"2020-11-11T07:03:25.000Z","updated":"2021-11-30T09:05:06.460Z","comments":true,"path":"api/articles/node-js插件.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"方便开发者根据自身的需求对pomelo原有的功能进行有效的扩展，此目录下可以扩展业务插件。 1.高并发下的统计数据插件 import readNumPlugin &#x3D; require(&#39;.&#x2F;plugins&#x2F;read-num-plugin&#39...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"node.js","slug":"node-js","count":7,"path":"api/tags/node-js.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Node中间件","uid":"95c23f559d3556b23b5f7de5b6f172a9","slug":"node中间件","date":"2020-07-14T08:01:50.000Z","updated":"2021-11-30T09:05:29.725Z","comments":true,"path":"api/articles/node中间件.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"node中间件可以概括为在请求的过程中或者进程间通信过程中过滤，交给函数处理之前先交给他处理比如用来做中间件的 body-parser method-override 自己写的心跳及检测用户登录验证功能 app.use(&#39;&#x2F;&#39;,function(req,...","link":"","photos":[],"count_time":{"symbolsCount":584,"symbolsTime":"1 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"node.js","slug":"node-js","count":7,"path":"api/tags/node-js.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}