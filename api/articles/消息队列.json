{"title":"消息队列","uid":"a238c8f44f70d50de3377d42da7a86a2","slug":"消息队列","date":"2021-01-22T08:57:26.000Z","updated":"2021-11-30T09:00:19.903Z","comments":true,"path":"api/articles/消息队列.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":[],"content":"<p>消息队列是分布式应用间交换信息的重要组件，消息队列可驻留在内存或磁盘上, 队列可以存储消息直到它们被应用程序读走。</p>\n<p>通过消息队列，应用程序可以在不知道彼此位置的情况下独立处理消息，或者在处理消息前不需要等待接收此消息。</p>\n<p>所以消息队列可以解决应用解耦、异步消息、流量削锋等问题，是实现高性能、高可用、可伸缩和最终一致性架构中不可以或缺的一环。</p>\n<p>现在比较常见的消息队列产品主要有ActiveMQ、RabbitMQ、ZeroMQ、Kafka、RocketMQ等</p>\n<p>自己的理解就是在进程间以队列的形式去管理数据交互的方式，主要用发布/订阅的形式，Mqtt是消息队列中间件的协议<br>Mqtt是基于tcp/ip的</p>\n<p>具体性能分析如下<br><img src=\"/post/E6ABD02E2A8AC3950369D9EEFAD8F984.png\" alt=\"MQ\"></p>\n<p>着重说下RabbitMQ</p>\n<p>1.mac安装<br>首先需要安装brew</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;bin&#x2F;zsh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;gitee.com&#x2F;cunkai&#x2F;HomebrewCN&#x2F;raw&#x2F;master&#x2F;Homebrew.sh)&quot;\n\nbrew install rabbitmq\n\n#程序目录\ncd &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;\n#启动\nsudo .&#x2F;rabbitmq-server</code></pre>\n\n<p>浏览器访问:localhost:15672,默认账号为:guest 密码: guest</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">## 添加账号\n.&#x2F;rabbitmqctl add_user admin admin\n## 添加访问权限\n.&#x2F;rabbitmqctl set_permissions -p &quot;&#x2F;&quot; admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;\n## 设置超级权限\n.&#x2F;rabbitmqctl set_user_tags admin administrator</code></pre>\n\n\n","text":"消息队列是分布式应用间交换信息的重要组件，消息队列可驻留在内存或磁盘上, 队列可以存储消息直到它们被应用程序读走。 通过消息队列，应用程序可以在不知道彼此位置的情况下独立处理消息，或者在处理消息前不需要等待接收此消息。 所以消息队列可以解决应用解耦、异步消息、流量削锋等问题，是实...","link":"","photos":[],"count_time":{"symbolsCount":858,"symbolsTime":"1 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"MQ","slug":"MQ","count":1,"path":"api/tags/MQ.json"}],"toc":"","author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Redis 数据结构","uid":"90377550ef5a56f28985406fa3be8444","slug":"redis-数据结构","date":"2021-02-05T09:22:19.000Z","updated":"2021-05-12T11:43:14.504Z","comments":true,"path":"api/articles/redis-数据结构.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"redis 的数据存储类型分为String Hash List Set(集合） zset(有序集合) 1.String为最基本的类型， 及Key value的形式，我们可以根据具体业务上的需求去定义key来达到1对1的关系，可以理解为一个最简单的mstruct sdshdr { ...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据库","slug":"数据库","count":1,"path":"api/categories/数据库.json"}],"tags":[{"name":"redis","slug":"redis","count":2,"path":"api/tags/redis.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"node.js插件","uid":"772f75bc85a5f28f8e914897060b12ef","slug":"node-js插件","date":"2020-11-11T07:03:25.000Z","updated":"2021-11-30T09:05:06.460Z","comments":true,"path":"api/articles/node-js插件.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"方便开发者根据自身的需求对pomelo原有的功能进行有效的扩展，此目录下可以扩展业务插件。 1.高并发下的统计数据插件 import readNumPlugin &#x3D; require(&#39;.&#x2F;plugins&#x2F;read-num-plugin&#39...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"node.js","slug":"node-js","count":7,"path":"api/tags/node-js.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}