{"title":"Skynet","uid":"000e187a17a937440770c60b6bdf94f6","slug":"skynet","date":"2021-02-20T09:26:44.000Z","updated":"2021-11-30T09:06:00.566Z","comments":true,"path":"api/articles/skynet.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"content":"<p>Skynet 是一个基于 Actor 模式的开源并发框架。</p>\n<p>skynet 节点，通过 master ，认识网络中所有其它 skynet 节点。它们相互一一建立单向通讯通道。也就是说，如果一共有 100 个 skynet 节点，在它们启动完毕后，会建立起 1 万条通讯通道。</p>\n<p>这个系统是单进程多线程模型。</p>\n<p>1.安装<br>linux下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install git\n\nyum -y install autoconf\n\nyum -y install  readline-devel\n\ngit clone https:&#x2F;&#x2F;github.com&#x2F;cloudwu&#x2F;skynet.git\n\ncd skynet\nmake linux</code></pre>\n<p>mac下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew install autoconf\ngit clone https:&#x2F;&#x2F;github.com&#x2F;cloudwu&#x2F;skynet.git\n\ncd skynet\nmake macosx</code></pre>\n<p>启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;skynet examples&#x2F;config\t#开启服务端节点\n.&#x2F;3rd&#x2F;lua&#x2F;lua examples&#x2F;client.lua \t#开启客户端测试</code></pre>\n\n<p>2.编写其中的服务<br>2.1 c服务<br>service-src中为c服务的位置<br>编写出基本的构造逻辑函数后需要在Makefile中CSERVICE = 后面加上对应的模块名，然后出来编译后出.so文件<br>在examples文件夹下写lua服务，加配置config文件及lua服务文件，通过local  servera = skynet.launch(“zx”, “123”)<br>加载对应的c文件进行交互</p>\n<p>2.2lua服务<br>同上面的c，文件名为xx_service.lua,skynet.newservice(“xx_service”)创建服务handle,可以通过skynet.call 或者<br>skynet.send来调用其中的函数</p>\n<p>2.3 tcp服务<br>server主要调用skynet.socketdriver,skynet.netpack用来解2进制包数据<br>client需要调用client.socket</p>\n","text":"Skynet 是一个基于 Actor 模式的开源并发框架。 skynet 节点，通过 master ，认识网络中所有其它 skynet 节点。它们相互一一建立单向通讯通道。也就是说，如果一共有 100 个 skynet 节点，在它们启动完毕后，会建立起 1 万条通讯通道。 这个系...","link":"","photos":[],"count_time":{"symbolsCount":949,"symbolsTime":"1 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"游戏","slug":"游戏","count":8,"path":"api/tags/游戏.json"}],"toc":"","author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"微信Baidu审核对接方案实现","uid":"9d448e38833c6c56c1bb282d7671bf10","slug":"微信baidu审核对接方案实现","date":"2021-05-10T10:03:17.000Z","updated":"2021-11-30T08:59:56.618Z","comments":true,"path":"api/articles/微信baidu审核对接方案实现.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"微信和百度都有文字及图片视频啥的AI审核接口，文字审核这里就不说了，时间短也比较快，唯一缺点是测试版每秒的并发最多5个，在并发的情况下会出现未审核，有钱的可以升级付费版，没钱的可以在比较空闲的进程中对未审核的作品和评论，进行2次审核，起一个定时器半小时或者1小时来做 下面着重说下...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"node.js","slug":"node-js","count":7,"path":"api/tags/node-js.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Redis 数据结构","uid":"90377550ef5a56f28985406fa3be8444","slug":"redis-数据结构","date":"2021-02-05T09:22:19.000Z","updated":"2021-05-12T11:43:14.504Z","comments":true,"path":"api/articles/redis-数据结构.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"redis 的数据存储类型分为String Hash List Set(集合） zset(有序集合) 1.String为最基本的类型， 及Key value的形式，我们可以根据具体业务上的需求去定义key来达到1对1的关系，可以理解为一个最简单的mstruct sdshdr { ...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"数据库","slug":"数据库","count":1,"path":"api/categories/数据库.json"}],"tags":[{"name":"redis","slug":"redis","count":2,"path":"api/tags/redis.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}