{"title":"游戏中的运营活动框架思路","uid":"e88abce89c8aca44a71f313b7a0268e8","slug":"游戏中的运营活动框架和思路","date":"2019-11-22T08:15:07.000Z","updated":"2021-11-30T09:01:00.273Z","comments":true,"path":"api/articles/游戏中的运营活动框架和思路.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":[],"content":"<p>游戏的运营活动一般会有好多种类型，但是这些类型的功能一般是有共同和非共同的部分，这里记录一个对多类型运营活动的管理框架<br>通过模板表录入运营活动的参数，包括跳转模块，开启方法，红点方法，等级等。如果有类似活动结束发奖的奖励表也可以用表来记录不同活动operation_id对应的奖励<br>进行管理。<br><img src=\"/post/1574411899.jpg\" alt=\"示例\"><br>1.初始化玩家排行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">init_sky_bless_rank() -&gt;\n    List &#x3D; [PlayerSkyBless || PlayerSkyBless &lt;- get_all_player_st_sky_bless(),\n        PlayerSkyBless #player_st_sky_bless.bless_times &gt; 0],\n    SortFunction &#x3D; fun(A,B) -&gt;\n        if  A #player_st_sky_bless.bless_times &#x3D;:&#x3D; B #player_st_sky_bless.bless_times -&gt;\n                A #player_st_sky_bless.last_time &#x3D;&lt; B #player_st_sky_bless.last_time;\n            true -&gt;\n                A #player_st_sky_bless.bless_times &gt; B #player_st_sky_bless.bless_times\n        end\n    end,\n    SortList &#x3D; lists:sort(SortFunction,List),\n    Num &#x3D; length(SortList),\n    Tran &#x3D; fun() -&gt;\n        if  Num &gt; 0 -&gt;\n                lists:foreach(\n                    fun(Seq) -&gt;\n                        PlayerSkyBless &#x3D; lists:nth(Seq,SortList),\n                        lib_ets:insert(sky_bless_player_ranking,#sky_lantern_bless_player_ranking&#123;\n                            player_id &#x3D; PlayerSkyBless #player_st_sky_bless.player_id,ranking &#x3D; Seq&#125;,replace),\n                        BlessRanking &#x3D; #sky_lantern_bless_ranking&#123;\n                            ranking &#x3D; Seq,\n                            player_id &#x3D; PlayerSkyBless #player_st_sky_bless.player_id,\n                            times   &#x3D; PlayerSkyBless #player_st_sky_bless.bless_times,\n                            bless_time &#x3D; PlayerSkyBless #player_st_sky_bless.last_time\n                        &#125;,\n                        lib_ets:insert(sky_bless_ranking,BlessRanking,replace)\n                    end,\n                    lists:seq(1,Num)\n                );\n            true -&gt;\n                noop\n        end\n    end,\n    game_db:do(Tran).</code></pre>\n<span id=\"more\"></span>\n<p>2.处理玩家排行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deal_update_player_ranking(PlayerId) -&gt;\n    PlayerSkyBless &#x3D; get_player_st_sky_bless(PlayerId),\n    BlessTimes &#x3D; PlayerSkyBless #player_st_sky_bless.bless_times,\n    BlessTime  &#x3D; PlayerSkyBless #player_st_sky_bless.last_time,\n    NowRanking &#x3D; get_sky_bless_player_ranking(PlayerId),\n    Tran &#x3D; fun() -&gt;\n        if  NowRanking &#x3D;&#x3D; 0 -&gt;\n                Len &#x3D; length(get_all_sky_bless_ranking()),\n                NewRanking &#x3D; #sky_lantern_bless_ranking&#123;\n                    ranking     &#x3D; Len + 1,\n                    player_id   &#x3D; PlayerId,\n                    times       &#x3D; BlessTimes,\n                    bless_time  &#x3D; BlessTime\n                &#125;,\n                lib_ets:insert(sky_bless_ranking,NewRanking,replace),\n                lib_ets:insert(sky_bless_player_ranking,#sky_lantern_bless_player_ranking&#123;\n                    player_id &#x3D; PlayerId,ranking &#x3D; Len + 1&#125;,replace),\n                ranking_sort(PlayerId,BlessTimes,BlessTime,Len);\n            true -&gt;\n                lib_ets:update(sky_bless_ranking,NowRanking,[&#123;#sky_lantern_bless_ranking.times,BlessTimes&#125;,\n                    &#123;#sky_lantern_bless_ranking.bless_time,BlessTime&#125;]),\n                ranking_sort(PlayerId,BlessTimes,BlessTime,NowRanking - 1)\n        end\n    end,\n    game_db:do(Tran).\n\nranking_sort(_,_,_,0) -&gt;\n    noop;\n\nranking_sort(PlayerId,BlessTimes,Time,Ranking) -&gt;\n    BlessRanking &#x3D; get_sky_bless_ranking(Ranking),\n    case sort(BlessTimes,Time,BlessRanking #sky_lantern_bless_ranking.times,BlessRanking #sky_lantern_bless_ranking.bless_time) of\n        true -&gt;\n            NewRanking &#x3D; #sky_lantern_bless_ranking&#123;\n                ranking &#x3D; Ranking,\n                player_id &#x3D; PlayerId,\n                times   &#x3D; BlessTimes,\n                bless_time &#x3D; Time\n            &#125;,\n            ARanking &#x3D; #sky_lantern_bless_ranking&#123;\n                ranking &#x3D; Ranking + 1,\n                player_id &#x3D; BlessRanking #sky_lantern_bless_ranking.player_id,\n                times &#x3D; BlessRanking #sky_lantern_bless_ranking.times,\n                bless_time &#x3D; BlessRanking #sky_lantern_bless_ranking.bless_time\n            &#125;,\n            lib_ets:insert(sky_bless_player_ranking,#sky_lantern_bless_player_ranking&#123;\n                player_id &#x3D; BlessRanking #sky_lantern_bless_ranking.player_id,ranking &#x3D; Ranking + 1&#125;,replace),\n            lib_ets:insert(sky_bless_player_ranking,#sky_lantern_bless_player_ranking&#123;\n                player_id &#x3D; PlayerId,ranking &#x3D; Ranking&#125;,replace),\n            lib_ets:insert(sky_bless_ranking,NewRanking,replace),\n            lib_ets:insert(sky_bless_ranking,ARanking,replace),\n            ranking_sort(PlayerId,BlessTimes,Time,Ranking - 1);\n        false -&gt;\n            noop\n    end.</code></pre>\n\n<p>3.通过公共管理进程对活动进行管理发奖及消息通知</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">handle_cast(&#123;async_send&#125;, &#123;true,State&#125;) -&gt;\n    catch api_st_sky_bless:timer_notify(State),\n    start_timer(1),\n    &#123;noreply, &#123;true,[]&#125;&#125;;\n\nhandle_cast(&#123;activity_stop&#125;,State) -&gt;\n    mod_st_sky_bless:give_award(),\n    &#123;noreply,State&#125;;</code></pre>","text":"游戏的运营活动一般会有好多种类型，但是这些类型的功能一般是有共同和非共同的部分，这里记录一个对多类型运营活动的管理框架通过模板表录入运营活动的参数，包括跳转模块，开启方法，红点方法，等级等。如果有类似活动结束发奖的奖励表也可以用表来记录不同活动operation_id对应的奖励进...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"设计方法","slug":"设计方法","count":5,"path":"api/categories/设计方法.json"}],"tags":[{"name":"游戏","slug":"游戏","count":8,"path":"api/tags/游戏.json"}],"toc":"","author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"基础知识","uid":"7f9eaea51aac5991b1ad0d8e6f097110","slug":"基础知识","date":"2020-05-22T06:42:58.000Z","updated":"2021-11-30T08:59:30.750Z","comments":true,"path":"api/articles/基础知识.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":null,"text":"异步：异步指进程不是一次性执行完毕，而是走走停停，以不可知的速度向前推进。 基本功能 进程管理进程控制、进程同步、进程通信、死锁处理、处理机调度等。 内存管理内存分配、地址映射、内存保护与共享、虚拟内存等。 文件管理文件存储空间的管理、目录管理、文件读写管理和保护等。 设备管理完...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"游戏全局通知红点系统","uid":"c3f4727b2c3a19f39df59e9531fb513f","slug":"游戏全局通知红点系统","date":"2019-08-23T09:44:00.000Z","updated":"2021-11-30T09:00:43.135Z","comments":true,"path":"api/articles/游戏全局通知红点系统.json","keywords":"node.js blogs IT 互联网 服务端 游戏 mysql redis","cover":[],"text":"红点功能贯穿游戏所有功能，像是一个全局的通知，用一个配置表记录所有游戏功能及入口和红点、开启的方法名加载进内存主入口界面时候调用取得已开启的功能列表mod_function:get_all_game_function() 构造成带父子关系的功能列表 &#123;Id,[&#123...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"设计方法","slug":"设计方法","count":5,"path":"api/categories/设计方法.json"}],"tags":[{"name":"游戏","slug":"游戏","count":8,"path":"api/tags/游戏.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}