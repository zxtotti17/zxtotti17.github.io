{"total":35,"pageSize":12,"pageCount":3,"data":[{"title":"Mongodb笔记","uid":"03ffe00e2e1072f20d7bd09de5fd3f01","slug":"mongodb笔记","date":"2020-07-28T04:54:03.000Z","updated":"2021-12-09T11:36:06.983Z","comments":true,"path":"api/articles/mongodb笔记.json","cover":null,"text":"下载地址：https://www.mongodb.com/download-center#community 解压sudo tar -zxvf mongodb-osx-ssl-x86_64-4.0.9.tgzexport PATH=/usr/local/mongodb/bin:$...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"mongodb","slug":"mongodb","count":1,"path":"api/tags/mongodb.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node中间件","uid":"95c23f559d3556b23b5f7de5b6f172a9","slug":"node中间件","date":"2020-07-14T08:01:50.000Z","updated":"2021-11-30T09:05:29.725Z","comments":true,"path":"api/articles/node中间件.json","cover":null,"text":"node中间件可以概括为在请求的过程中或者进程间通信过程中过滤，交给函数处理之前先交给他处理比如用来做中间件的 body-parser method-override 自己写的心跳及检测用户登录验证功能 app.use(&#39;&#x2F;&#39;,function(req,...","link":"","photos":[],"count_time":{"symbolsCount":584,"symbolsTime":"1 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"node.js","slug":"node-js","count":7,"path":"api/tags/node-js.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Python学习笔记","uid":"d0c8d2c20d89823379ca4a9355ecc003","slug":"python学习笔记","date":"2020-07-09T08:20:08.000Z","updated":"2021-11-30T09:05:42.641Z","comments":true,"path":"api/articles/python学习笔记.json","cover":null,"text":"1.遇到的问题SyntaxError: Non-ASCII character ‘\\xe4’#-- coding: utf-8 -- 或者 #coding=utf-8 mac上的环境变量open ~/.bash_profile中加入如下然后保存 source ~/.bash_pr...","link":"","photos":[],"count_time":{"symbolsCount":790,"symbolsTime":"1 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Mysql笔记","uid":"01997d5dc8999c6dc19f4a1759fa3505","slug":"mysql笔记","date":"2020-07-06T08:40:36.000Z","updated":"2021-11-30T09:04:54.682Z","comments":true,"path":"api/articles/mysql笔记.json","cover":[],"text":"第1章 SQL基础1.数据分为DDL(数据定义语言)，DML(数据操纵语言)，DCL(数据控制语言) 1.1 DDL语句 mysql -uroot -p create database test1; use test1; show tables; #查看所有表 drop data...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"mysql","slug":"mysql","count":3,"path":"api/tags/mysql.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"游戏中写出的Bug及思考","uid":"892e834e7d38475802e25b3393e5a70c","slug":"游戏中写出的bug及思考","date":"2020-06-16T01:48:20.000Z","updated":"2021-11-30T09:01:06.424Z","comments":true,"path":"api/articles/游戏中写出的bug及思考.json","cover":null,"text":"1.如果存在小游戏版本，写出的功能要兼容旧版本及新版本，因为小游戏渠道如果拦截就版本会导致玩家无法更新到新版本无法游戏 2.node版本要用双数的正式版本，单数为测试版本，容易存在不可预知的问题，比如之前时区的双数上会出现无法识别的问题 3.进程间通信的逻辑一定要注意，进程间的内...","link":"","photos":[],"count_time":{"symbolsCount":345,"symbolsTime":"1 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"游戏","slug":"游戏","count":8,"path":"api/tags/游戏.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Es6 Js规范","uid":"07efd5dd1c92b0165acc3d4c1fb4bbbd","slug":"js规范","date":"2020-06-09T09:59:15.000Z","updated":"2020-06-24T09:29:35.525Z","comments":true,"path":"api/articles/js规范.json","cover":null,"text":"数组拷贝 const itemsCopy &#x3D; [...items]; 取值方式 const [first, second] &#x3D; arr; 函数初始化 function f3(a) &#123; const b &#x3D; a || 1; &#x2F;&#x2...","link":"","photos":[],"count_time":{"symbolsCount":423,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"基础知识","uid":"7f9eaea51aac5991b1ad0d8e6f097110","slug":"基础知识","date":"2020-05-22T06:42:58.000Z","updated":"2021-11-30T08:59:30.750Z","comments":true,"path":"api/articles/基础知识.json","cover":null,"text":"异步：异步指进程不是一次性执行完毕，而是走走停停，以不可知的速度向前推进。 基本功能 进程管理进程控制、进程同步、进程通信、死锁处理、处理机调度等。 内存管理内存分配、地址映射、内存保护与共享、虚拟内存等。 文件管理文件存储空间的管理、目录管理、文件读写管理和保护等。 设备管理完...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"游戏中的运营活动框架思路","uid":"e88abce89c8aca44a71f313b7a0268e8","slug":"游戏中的运营活动框架和思路","date":"2019-11-22T08:15:07.000Z","updated":"2021-11-30T09:01:00.273Z","comments":true,"path":"api/articles/游戏中的运营活动框架和思路.json","cover":[],"text":"游戏的运营活动一般会有好多种类型，但是这些类型的功能一般是有共同和非共同的部分，这里记录一个对多类型运营活动的管理框架通过模板表录入运营活动的参数，包括跳转模块，开启方法，红点方法，等级等。如果有类似活动结束发奖的奖励表也可以用表来记录不同活动operation_id对应的奖励进...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"设计方法","slug":"设计方法","count":5,"path":"api/categories/设计方法.json"}],"tags":[{"name":"游戏","slug":"游戏","count":8,"path":"api/tags/游戏.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"游戏全局通知红点系统","uid":"c3f4727b2c3a19f39df59e9531fb513f","slug":"游戏全局通知红点系统","date":"2019-08-23T09:44:00.000Z","updated":"2021-11-30T09:00:43.135Z","comments":true,"path":"api/articles/游戏全局通知红点系统.json","cover":[],"text":"红点功能贯穿游戏所有功能，像是一个全局的通知，用一个配置表记录所有游戏功能及入口和红点、开启的方法名加载进内存主入口界面时候调用取得已开启的功能列表mod_function:get_all_game_function() 构造成带父子关系的功能列表 &#123;Id,[&#123...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"设计方法","slug":"设计方法","count":5,"path":"api/categories/设计方法.json"}],"tags":[{"name":"游戏","slug":"游戏","count":8,"path":"api/tags/游戏.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Redis笔记","uid":"cf4d6c3460b72521408e1365a505bd53","slug":"redis笔记","date":"2019-08-01T08:52:31.000Z","updated":"2021-11-30T09:05:53.076Z","comments":true,"path":"api/articles/redis笔记.json","cover":null,"text":" Redis是什么、特点、优势redis是Key-Value数据库,数据包含各种数据 字符串String、字典Hash、列表List、集合Set、有序集合SortedSet等redis支持数据持久化，重启再次加载,支持数据备份(支持分布式),Redis是单进程单线程的Redis的...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"redis","slug":"redis","count":2,"path":"api/tags/redis.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"游戏中大型自动比赛玩法设计","uid":"64fa7148428d7d977cb2502b7dbd3115","slug":"游戏中大型比赛玩法设计思路","date":"2019-07-30T08:08:45.000Z","updated":"2021-11-30T09:00:52.167Z","comments":true,"path":"api/articles/游戏中大型比赛玩法设计思路.json","cover":[],"text":"争霸赛赛程范例3月1日 0：00~3月3日 12:00 报名 40级以上手动报名3月3日 13：00 淘汰赛 “13:00取数据，提前1小时向玩家发送邮件提醒13:10开始出战报，每隔5分钟出1场战报天榜负5局进入地榜，地榜负5局则被淘汰”3月4日 14:00 16强赛（32进1...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"设计方法","slug":"设计方法","count":5,"path":"api/categories/设计方法.json"}],"tags":[{"name":"游戏","slug":"游戏","count":8,"path":"api/tags/游戏.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Erlang List模块函数使用大全","uid":"dfb30fc03fd62385d2aef0d277edc760","slug":"Erlang List模块函数使用大全","date":"2019-05-07T11:49:16.000Z","updated":"2021-11-30T09:04:30.114Z","comments":true,"path":"api/articles/Erlang List模块函数使用大全.json","cover":null,"text":"Erlang List模块函数使用大全 一，带函数Pred1, all(Pred, List) -&gt; boolean()如果List中的每个元素作为Pred函数的参数执行，结果都返回true，那么all函数返回true，否则返回false 例子： lists:all(fun...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"IT笔记","slug":"IT笔记","count":21,"path":"api/categories/IT笔记.json"}],"tags":[{"name":"Erlang","slug":"Erlang","count":2,"path":"api/tags/Erlang.json"}],"author":{"name":"Fly","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一个在夏天会被芒果砸到的城市靠写代码为生的前职业电竞选手","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}